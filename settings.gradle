
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 配置
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
 * 子工程请配置在settings.json中, 格式如下:
 *
 *  {
 *    // 组别
 *    "group1": [
 *      // 子工程名, 全局唯一, 即使在不同的组别中, 也不允许重复
 *      "project1",
 *      "project2"
 *    ],
 *    // 组别
 *    "group2": [
 *      // 子工程名, 全局唯一, 即使在不同的组别中, 也不允许重复
 *      "project3"
 *    ]
 *  }
 *
 * 本脚本增加了组别的概念, 能够在Gradle脚本中指定组别进行通用配置(参考build-common.gradle). 另外, 本脚本支持子工程多层目录
 * 结构(Gradle默认子工程只能在根目录下). 当设置flatMode=true时, 子工程平铺在根目录下, 例如: project1/ project2/ project3/.
 * 当设置flatMode=false时, 子工程放在以组别命名的目录下, group1/project1 group1/project2 group2/project3. 这里要注意的是,
 * 子工程名全局唯一, 即使在不同的组别中, 也不允许重复.
 *
 */

// 工程结构: true: 平铺模式, 子工程在根目录下 false: 子工程在以组别命名的目录下
ext.flatMode = true



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 脚本
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

// [请勿修改] 在'settings.gradle'中, 解析'settings.json'中声明的子工程清单, 将它们加入gradle构建.
apply from: 'gradle/settings-load.gradle'



///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// 示例
///////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

/*
 * 示例: Gradle标准的子工程配置示例.
 * 如果需要改成标准模式, 上面的脚本都要删除, 标准模式只能加载根目录下的子工程, 也不存在组别的概念.
 */

//include ':project1'
//include ':project2'
